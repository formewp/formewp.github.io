import{_ as e,o as a,c as t,V as o}from"./chunks/framework.364d6ed5.js";const f=JSON.parse('{"title":"Services","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/basics/services.md","filePath":"documentation/basics/services.md","lastUpdated":1684512137000}'),s={name:"documentation/basics/services.md"},r=o('<h1 id="services" tabindex="-1">Services <a class="header-anchor" href="#services" aria-label="Permalink to &quot;Services&quot;">​</a></h1><p>Services are any classes that perform additional ad hoc functions on top of the basic MVC structure.</p><p>They often get called by Controllers, but can also get called from Models or other Services depending on the use case.</p><p>For example you might have a service that generates fake data for a particular form during development, or another that calls a web api, or one that triggers a process.</p><p>Often, we use them to spin off functionality where another class is becoming or might become too heavy, in order to follow the <a href="https://github.com/jupeter/clean-code-php#single-responsibility-principle-srp" target="_blank" rel="noreferrer">single responsiblity principle</a>.</p><p>The directory for generic services, is <code>app/Services</code>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Where you have a number of related services that perform a particular type of functionality, and you start to see a pattern where they could be logically grouped together, you might want to rename and namespace them accordingly, and create an interface to formalise the api.</p><p>For example, in Forme apps, <code>Registries</code> are services that register WordPress features using the <code>register</code> method.</p></div><h2 id="code-generation" tabindex="-1">Code Generation <a class="header-anchor" href="#code-generation" aria-label="Permalink to &quot;Code Generation&quot;">​</a></h2><p>You can use the code generator.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">forme</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">service</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FooBar</span></span></code></pre></div><p>This will create a new service called <code>FooBarService</code> in the <code>app/Services</code> folder.</p>',11),c=[r];function n(i,l,p,d,h,m){return a(),t("div",null,c)}const g=e(s,[["render",n]]);export{f as __pageData,g as default};
