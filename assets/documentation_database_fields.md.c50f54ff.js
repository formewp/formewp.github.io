import{_ as s,o as a,c as e,V as o}from"./chunks/framework.364d6ed5.js";const C=JSON.parse('{"title":"Fields","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/database/fields.md","filePath":"documentation/database/fields.md","lastUpdated":1686052798000}'),n={name:"documentation/database/fields.md"},l=o(`<h1 id="fields" tabindex="-1">Fields <a class="header-anchor" href="#fields" aria-label="Permalink to &quot;Fields&quot;">​</a></h1><p>Forme is tightly integrated with <a href="https://www.advancedcustomfields.com/" target="_blank" rel="noreferrer">Advanced Custom Fields</a>, and includes a few conventions and some useful magic for handling fields.</p><h2 id="creating-a-field-group" tabindex="-1">Creating a field group <a class="header-anchor" href="#creating-a-field-group" aria-label="Permalink to &quot;Creating a field group&quot;">​</a></h2><p>Field groups live in <code>app/Fields</code> and should extend <code>Forme/Fields/FieldGroupInterface</code>. They have a single method, <code>add</code>, into which you can copy the php from the export feature in ACF.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// app/Fields/FooBarFielGroup.php</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">declare</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">strict_types</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">YourNameSpace</span><span style="color:#89DDFF;">\\</span><span style="color:#FFCB6B;">YourApp</span><span style="color:#89DDFF;">\\</span><span style="color:#FFCB6B;">Fields</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">Forme</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Framework</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Core</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">FieldGroupInterface</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FooBarFieldGroup</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FieldGroupInterface</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">void</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">acf_add_local_field_group</span><span style="color:#89DDFF;">([</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">                   </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">group_5fc6297c4b8cb</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">                 </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fields</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">etc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">]);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Don&#39;t put more than one field group per class. Also try to keep field groups as small as possible when you&#39;re configuring your forms in acf itself. You want to keep things composable and maintainable.</p></div><h2 id="field-registry" tabindex="-1">Field Registry <a class="header-anchor" href="#field-registry" aria-label="Permalink to &quot;Field Registry&quot;">​</a></h2><p>The field registry class takes care of adding all your field groups, it globs the classes in <code>app\\Fields</code> on the <code>acf/init</code> hook, and cycles through each one, calling <code>add</code>.</p><h2 id="automatic-injection-into-template-controllers" tabindex="-1">Automatic injection into Template Controllers <a class="header-anchor" href="#automatic-injection-into-template-controllers" aria-label="Permalink to &quot;Automatic injection into Template Controllers&quot;">​</a></h2><p>ACF Fields for the queried object are automatically injected into Template Controllers - take a look at <code>$request[&#39;fields&#39;]</code>.</p><p>Otherwise, call <code>get_field</code> or <code>get_fields</code> as you would do normally.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You shouldn&#39;t ever need to use ACF&#39;s <code>get_sub_field</code> function, especially since we really recommend not using its <code>have_rows</code> antipattern in the first place. Try to refactor if you start reaching for either of those.</p></div><h2 id="code-generation" tabindex="-1">Code Generation <a class="header-anchor" href="#code-generation" aria-label="Permalink to &quot;Code Generation&quot;">​</a></h2><p>You can create a new field group via the cli:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">forme</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">field</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FooBar</span></span></code></pre></div><p>This will make a new field group class <code>YourNameSpace\\YourApp\\Fields\\FooBarFieldGroup</code> ready to populate.</p>`,16),p=[l];function t(c,r,i,d,F,y){return a(),e("div",null,p)}const u=s(n,[["render",t]]);export{C as __pageData,u as default};
