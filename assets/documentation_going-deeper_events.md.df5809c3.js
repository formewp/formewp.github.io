import{_ as e,o as t,c as o,V as a}from"./chunks/framework.364d6ed5.js";const u=JSON.parse('{"title":"Events","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/going-deeper/events.md","filePath":"documentation/going-deeper/events.md","lastUpdated":1684512137000}'),n={name:"documentation/going-deeper/events.md"},i=a('<h1 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h1><p>Sometimes you want to store events and other ad hoc data to refer to later and drive the application behavour, or to store some logging information.</p><p>Forme includes a basic solution for this.</p><h2 id="the-event-model" tabindex="-1">The Event Model <a class="header-anchor" href="#the-event-model" aria-label="Permalink to &quot;The Event Model&quot;">​</a></h2><p>An event has he following data structure:</p><ul><li>Type - a snake case string representing the type of event, for example <code>log</code> or <code>user_action</code></li><li>Payload - a json object containing the event payload, for example the log report, or details of the user action that occurred</li><li>Created at - the time the event happened</li></ul><p>It should in theory be immutable - that is once it&#39;s been created, it should never be modified or deleted.</p><h2 id="application-logging" tabindex="-1">Application Logging <a class="header-anchor" href="#application-logging" aria-label="Permalink to &quot;Application Logging&quot;">​</a></h2><p>By default, Forme stores its own <a href="/documentation/development-workflow/debugging.html#monolog">logs</a> as Events when <code>WP_ENV</code> is set to <code>production</code>.</p>',9),r=[i];function s(d,l,c,h,p,g){return t(),o("div",null,r)}const _=e(n,[["render",s]]);export{u as __pageData,_ as default};
