import{_ as s,o as a,c as o,V as e}from"./chunks/framework.364d6ed5.js";const h=JSON.parse('{"title":"Controllers","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/basics/controllers.md","filePath":"documentation/basics/controllers.md","lastUpdated":1684568320000}'),n={name:"documentation/basics/controllers.md"},l=e(`<h1 id="controllers" tabindex="-1">Controllers <a class="header-anchor" href="#controllers" aria-label="Permalink to &quot;Controllers&quot;">​</a></h1><p>Route and other (non-template) Controllers should go in <code>app/Controllers</code>. If you&#39;re familiar with MVC frameworks sunch as Laravel and Symfony, then these should behave pretty much as you would expect.</p><p>For info on WordPress template controllers, <a href="/documentation/basics/template-controllers.html">check here</a>.</p><h2 id="what-are-controllers-for" tabindex="-1">What are controllers for? <a class="header-anchor" href="#what-are-controllers-for" aria-label="Permalink to &quot;What are controllers for?&quot;">​</a></h2><p>Controllers are classes where you put your route-level request handling logic. In practise, they coral together http or other parameters and inputs, call the database layer to grab or save data via Models, and organise the results into something for the view layer to present back to the user. Forme uses the single action controller paradigm, leveraging the magic <code>__invoke</code> method.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>It&#39;s usually a good idea to keep Controllers fairly lean - if they get very long or if any of the logic starts looking heavy, have a think about whether it might be worth spinning things off into some kind of service or transformer class. The Controller&#39;s function is to orchestrate and organise rather than do too much heavy lifting. And if we&#39;re following SOLID principles, any class with more than a few methods, or very long methods, is a code smell!</p></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>Controllers should extend <code>Forme\\Framework\\Controllers\\AbstractController</code> and should have an <code>__invoke</code> method which usually takes a PSR-7 request in the form of a <code>Forme\\Framework\\Http\\ServerRequest</code> object, although they can also accept an array of parameters.</p><p>Controllers should generally send back a PSR-7 response - strings and therefore view renders will be automatically converted to an HtmlResponse, arrays and any iterables will be turned into a JsonResponse.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// app/FooBarController.php</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">declare</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">strict_types</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">NameSpace</span><span style="color:#89DDFF;">\\</span><span style="color:#FFCB6B;">AppName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">NameSpace</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">AppName</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Core</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">View</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">Forme</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Framework</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Controllers</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">AbstractController</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">Psr</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Http</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Message</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">ServerRequestInterface</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FooBarController</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AbstractController</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__construct</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">View</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__invoke</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">body</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$this-&gt;</span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">render</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">single</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="requests-and-responses" tabindex="-1">Requests and Responses <a class="header-anchor" href="#requests-and-responses" aria-label="Permalink to &quot;Requests and Responses&quot;">​</a></h2><p>Take a look at our pages on <a href="/documentation/basics/http-requests.html">requests</a> and <a href="/documentation/basics/http-responses.html">responses</a> for more information.</p><h2 id="code-generation" tabindex="-1">Code Generation <a class="header-anchor" href="#code-generation" aria-label="Permalink to &quot;Code Generation&quot;">​</a></h2><p>You can use the code generator to scaffold Controllers.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">forme</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">controller</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FooBar</span></span></code></pre></div><p>This will create a new controller called <code>FooBarController</code> in the <code>app/Controllers</code> folder.</p>`,16),t=[l];function p(r,c,i,y,C,D){return a(),o("div",null,t)}const d=s(n,[["render",p]]);export{h as __pageData,d as default};
