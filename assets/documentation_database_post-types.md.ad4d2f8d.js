import{_ as e,o as s,c as t,V as a}from"./chunks/framework.364d6ed5.js";const _=JSON.parse('{"title":"Post Types","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/database/post-types.md","filePath":"documentation/database/post-types.md","lastUpdated":1686052798000}'),o={name:"documentation/database/post-types.md"},p=a('<h1 id="post-types" tabindex="-1">Post Types <a class="header-anchor" href="#post-types" aria-label="Permalink to &quot;Post Types&quot;">â€‹</a></h1><p>Custom post types can be created using the cli. The boilerplate is based on <code>wp-cli</code>.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">forme</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">post-type</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FooBar</span></span></code></pre></div><p>This will create the post type and eloquent classes for you, in <code>app/Models/FooBarPostType.php</code> and <code>app/Models/FooBar.php</code> respectively.</p><p>That&#39;s it, the post type should now be visible in WordPress admin, and accessible in your code via the repository, the Eloquent model or standard WP functions.</p><p>Go ahead and edit the classes if you need to make any changes.</p><div class="tip custom-block"><p class="custom-block-title">TODO</p><p>Add further support defaults (e.g. category) as wp-cli boilerplate is a little light on that sort of thing</p></div>',7),n=[p];function l(c,i,d,r,h,y){return s(),t("div",null,n)}const m=e(o,[["render",l]]);export{_ as __pageData,m as default};
